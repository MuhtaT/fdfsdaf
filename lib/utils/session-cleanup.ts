import { cleanupExpiredSessions } from '@/lib/services/session-service'

/**
 * –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–µ–∫—à–∏—Ö —Å–µ—Å—Å–∏–π
 */
export async function runSessionCleanup(): Promise<void> {
  try {
    const cleanedCount = await cleanupExpiredSessions()
    console.log(`üßπ –û—á–∏—â–µ–Ω–æ –∏—Å—Ç–µ–∫—à–∏—Ö —Å–µ—Å—Å–∏–π: ${cleanedCount}`)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π:', error)
  }
}

/**
 * –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π
 * –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–∑—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
 */
export function startSessionCleanupScheduler(intervalMinutes: number = 30): NodeJS.Timeout {
  const intervalMs = intervalMinutes * 60 * 1000
  
  console.log(`üîÑ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π (–∫–∞–∂–¥—ã–µ ${intervalMinutes} –º–∏–Ω—É—Ç)`)
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –æ—á–∏—Å—Ç–∫—É —Å—Ä–∞–∑—É
  runSessionCleanup()
  
  // –ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É
  return setInterval(runSessionCleanup, intervalMs)
}

/**
 * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏
 */
export function stopSessionCleanupScheduler(scheduler: NodeJS.Timeout): void {
  clearInterval(scheduler)
  console.log('‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
} 